{
  "name": "@echo/helper",
  "version": "1.0.0",
  "private": true,
  "license": "MIT",
  "scripts": {
    "build": "tsc && pnpm run sentry:sourcemaps",
    "clean": "rm -rf dist",
    "dev": "nodemon --watch \"src/**\" --watch \"../../lib/**/src/**\" --ext \"ts\" --exec \"ts-node --project tsconfig.json src/index.ts\"",
    "lint": "eslint --cache --fix -c .eslintrc.cjs --ext .ts .",
    "lint:ci": "eslint --quiet -c .eslintrc.cjs --ext .ts .",
    "lint:clean-cache": "rm -f .eslintcache",
    "modules:remove-all": "rm -rf node_modules",
    "modules:update-all": "ncu -u",
    "modules:upgrade": "pnpm upgrade",
    "prettier": "prettier -u --no-error-on-unmatched-pattern --write --cache .",
    "prettier:ci": "prettier -u --no-error-on-unmatched-pattern --log-level=silent -c  .",
    "start": "export NODE_ENV=production; ts-node --project tsconfig.json src/index.ts",
    "test": "jest --passWithNoTests",
    "test:ci": "jest --ci --no-cache --passWithNoTests",
    "test:watch": "jest --watch --passWithNoTests",
    "tsc": "tsc --noEmit",
    "tsc:ci": "pnpm run tsc",
    "tsc:clean-cache": "rm -f tsconfig.tsbuildinfo",
    "sentry:sourcemaps": "sentry-cli sourcemaps inject --org echo-nft --project helper ./dist && sentry-cli sourcemaps upload --org echo-nft --project helper ./dist",
    "update-db": "export NODE_ENV=production; ts-node --project tsconfig.json src/update-db-script.ts"
  },
  "dependencies": {
    "@echo/alchemy": "workspace:*",
    "@echo/firestore": "workspace:*",
    "@echo/model": "workspace:*",
    "@echo/utils": "workspace:*",
    "@echo/web3": "workspace:*",
    "@sentry/cli": "2.21.2",
    "@sentry/node": "7.77.0",
    "@sentry/profiling-node": "1.2.6",
    "cron": "3.1.6",
    "dayjs": "1.11.10",
    "ramda": "0.29.1"
  },
  "devDependencies": {
    "@jest/globals": "29.7.0",
    "@jest/types": "29.6.3",
    "@types/ramda": "0.29.7",
    "jest": "29.7.0",
    "jest-junit": "16.0.0",
    "nodemon": "3.0.1",
    "ts-node": "10.9.1",
    "tsconfig-paths": "4.2.0",
    "typescript": "5.2.2"
  }
}
